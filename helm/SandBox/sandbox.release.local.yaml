---
# Source: SandBox/charts/dips-ehr-app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: local-dips-ehr-app
  labels:
    helm.sh/chart: dips-ehr-app-0.1.0
    app.kubernetes.io/name: dips-ehr-app
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: dips-ehr-app
    app.kubernetes.io/instance: local
---
# Source: SandBox/charts/dips-ehr-configuration/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: local-dips-ehr-configuration
  labels:
    helm.sh/chart: dips-ehr-configuration-0.1.0
    app.kubernetes.io/name: dips-ehr-configuration
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: dips-ehr-configuration
    app.kubernetes.io/instance: local
---
# Source: SandBox/charts/dips-ehr-images/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: local-dips-ehr-images
  labels:
    helm.sh/chart: dips-ehr-images-0.1.0
    app.kubernetes.io/name: dips-ehr-images
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: dips-ehr-images
    app.kubernetes.io/instance: local
---
# Source: SandBox/charts/dips-ehr-notes/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: local-dips-ehr-notes
  labels:
    helm.sh/chart: dips-ehr-notes-0.1.0
    app.kubernetes.io/name: dips-ehr-notes
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: dips-ehr-notes
    app.kubernetes.io/instance: local
---
# Source: SandBox/charts/dips-ehr-security/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: local-dips-ehr-security
  labels:
    helm.sh/chart: dips-ehr-security-0.1.0
    app.kubernetes.io/name: dips-ehr-security
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: dips-ehr-security
    app.kubernetes.io/instance: local
---
# Source: SandBox/charts/dips-fhir-service2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: local-dips-fhir-service2
  labels:
    helm.sh/chart: dips-fhir-service2-0.1.0
    app.kubernetes.io/name: dips-fhir-service2
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: dips-fhir-service2
    app.kubernetes.io/instance: local
---
# Source: SandBox/charts/nav-pleiepenger/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: local-nav-pleiepenger
  labels:
    helm.sh/chart: nav-pleiepenger-0.1.0
    app.kubernetes.io/name: nav-pleiepenger
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nav-pleiepenger
    app.kubernetes.io/instance: local
---
# Source: SandBox/charts/dips-ehr-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-dips-ehr-app
  labels:
    helm.sh/chart: dips-ehr-app-0.1.0
    app.kubernetes.io/name: dips-ehr-app
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dips-ehr-app
      app.kubernetes.io/instance: local
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dips-ehr-app
        app.kubernetes.io/instance: local
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: dips-ehr-app
          securityContext:
            {}
          image: "thorstenbaek/dips-ehr-app:v1.0.0.21"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: SandBox/charts/dips-ehr-configuration/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-dips-ehr-configuration
  labels:
    helm.sh/chart: dips-ehr-configuration-0.1.0
    app.kubernetes.io/name: dips-ehr-configuration
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dips-ehr-configuration
      app.kubernetes.io/instance: local
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dips-ehr-configuration
        app.kubernetes.io/instance: local
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: dips-ehr-configuration
          securityContext:
            {}
          image: "thorstenbaek/dips-ehr-configuration:v1.0.0.3"
          imagePullPolicy: Always
          env:            
            - name: CONFIGURATION_SOURCE_URL
              value: "https://raw.githubusercontent.com/thorstenbaek/dips-ehr-configuration/master/configuration.json"
          ports:
            - name: http       
              containerPort: 80      
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {}
---
# Source: SandBox/charts/dips-ehr-images/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-dips-ehr-images
  labels:
    helm.sh/chart: dips-ehr-images-0.1.0
    app.kubernetes.io/name: dips-ehr-images
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dips-ehr-images
      app.kubernetes.io/instance: local
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dips-ehr-images
        app.kubernetes.io/instance: local
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: dips-ehr-images
          securityContext:
            {}
          image: "thorstenbaek/dips-ehr-images:v1.0.0.0"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: SandBox/charts/dips-ehr-notes/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-dips-ehr-notes
  labels:
    helm.sh/chart: dips-ehr-notes-0.1.0
    app.kubernetes.io/name: dips-ehr-notes
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dips-ehr-notes
      app.kubernetes.io/instance: local
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dips-ehr-notes
        app.kubernetes.io/instance: local
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: dips-ehr-notes
          securityContext:
            {}
          image: "thorstenbaek/dips-ehr-notes:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: SandBox/charts/dips-ehr-security/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-dips-ehr-security
  labels:
    helm.sh/chart: dips-ehr-security-0.1.0
    app.kubernetes.io/name: dips-ehr-security
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector: 
    matchLabels:
      app.kubernetes.io/name: dips-ehr-security
      app.kubernetes.io/instance: local
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dips-ehr-security
        app.kubernetes.io/instance: local
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: dips-ehr-security
          securityContext:
            {}
          image: "thorstenbaek/dips-ehr-security:v1.0.0.15"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
---
# Source: SandBox/charts/dips-fhir-service2/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-dips-fhir-service2
  labels:
    helm.sh/chart: dips-fhir-service2-0.1.0
    app.kubernetes.io/name: dips-fhir-service2
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dips-fhir-service2
      app.kubernetes.io/instance: local
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dips-fhir-service2
        app.kubernetes.io/instance: local
    spec:
      serviceAccountName: default
      securityContext:
        {}
      initContainers:
      - name: check-db-ready
        image: postgres:11.5
        command: ['sh', '-c', 
          'echo checking database;
          until pg_isready -h postgres-postgresql.postgres.svc.cluster.local -p 5432; 
          do echo waiting for database; sleep 2; done;']
      containers:
        - name: dips-fhir-service2
          securityContext:
            {}
          image: "thorstenbaek/dips.fhir.service:v1.0.0.20"
          imagePullPolicy: Always
          env:            
            - name: CONFIGURATION_SERVICE_URI
              value: "local-dips-ehr-configuration"
            - name: CONNECTION_STRING
              value: "server=postgres-postgresql.postgres.svc.cluster.local;database=fhirbase;user id=postgres;password=postgres;"
            - name: ENVIRONMENT
              value: "local.dips-ehr-app.localhost"
          ports:
            - name: http              
              containerPort: 80       
              protocol: TCP          
          resources:
            {}
---
# Source: SandBox/charts/nav-pleiepenger/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-nav-pleiepenger
  labels:
    helm.sh/chart: nav-pleiepenger-0.1.0
    app.kubernetes.io/name: nav-pleiepenger
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nav-pleiepenger
      app.kubernetes.io/instance: local
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nav-pleiepenger
        app.kubernetes.io/instance: local
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: nav-pleiepenger
          securityContext:
            {}
          image: "thorstenbaek/nav-pleiepenger:v1.0.0.6"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP         
          resources:
            {}
---
# Source: SandBox/charts/dips-ehr-app/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: local-dips-ehr-app
  labels:
    helm.sh/chart: dips-ehr-app-0.1.0
    app.kubernetes.io/name: dips-ehr-app
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "local.dips-ehr-app.localhost"
      secretName: dips-ehr-app-sandbox-tls
  rules:
    - host: "local.dips-ehr-app.localhost"
      http:
        paths:
          - path: /
            backend:
              serviceName: local-dips-ehr-app
              servicePort: 80
---
# Source: SandBox/charts/dips-ehr-configuration/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: local-dips-ehr-configuration
  labels:
    helm.sh/chart: dips-ehr-configuration-0.1.0
    app.kubernetes.io/name: dips-ehr-configuration
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "local.dips-ehr-configuration.localhost"
      secretName: configuration-sandbox-tls
  rules:
    - host: "local.dips-ehr-configuration.localhost"
      http:
        paths:
          - path: /
            backend:
              serviceName: local-dips-ehr-configuration
              servicePort: 80
---
# Source: SandBox/charts/dips-ehr-images/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: local-dips-ehr-images
  labels:
    helm.sh/chart: dips-ehr-images-0.1.0
    app.kubernetes.io/name: dips-ehr-images
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "local.dips-ehr-images.localhost"
      secretName: dips-ehr-images-sandbox-tls
  rules:
    - host: "local.dips-ehr-images.localhost"
      http:
        paths:
          - path: /
            backend:
              serviceName: local-dips-ehr-images
              servicePort: 80
---
# Source: SandBox/charts/dips-ehr-notes/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: local-dips-ehr-notes
  labels:
    helm.sh/chart: dips-ehr-notes-0.1.0
    app.kubernetes.io/name: dips-ehr-notes
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "local.dips-ehr-notes.localhost"
      secretName: dips-ehr-notes-sandbox-tls
  rules:
    - host: "local.dips-ehr-notes.localhost"
      http:
        paths:
          - path: /
            backend:
              serviceName: local-dips-ehr-notes
              servicePort: 80
---
# Source: SandBox/charts/dips-ehr-security/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: local-dips-ehr-security
  labels:
    helm.sh/chart: dips-ehr-security-0.1.0
    app.kubernetes.io/name: dips-ehr-security
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "local.dips-ehr-security.localhost"
      secretName: security-sandbox-tls
  rules:
    - host: "local.dips-ehr-security.localhost"
      http:
        paths:
          - path: /
            backend:
              serviceName: local-dips-ehr-security
              servicePort: 80
---
# Source: SandBox/charts/dips-fhir-service2/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: local-dips-fhir-service2
  labels:
    helm.sh/chart: dips-fhir-service2-0.1.0
    app.kubernetes.io/name: dips-fhir-service2
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "local.dips.fhir.service.localhost"
      secretName: fhir.service.sandbox-tls
  rules:
    - host: "local.dips.fhir.service.localhost"
      http:
        paths:
          - path: /
            backend:
              serviceName: local-dips-fhir-service2
              servicePort: 80
---
# Source: SandBox/charts/nav-pleiepenger/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: local-nav-pleiepenger
  labels:
    helm.sh/chart: nav-pleiepenger-0.1.0
    app.kubernetes.io/name: nav-pleiepenger
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "local.nav-pleiepenger.localhost"
      secretName: nav-pleiepenger-sandbox-tls
  rules:
    - host: "local.nav-pleiepenger.localhost"
      http:
        paths:
          - path: /
            backend:
              serviceName: local-nav-pleiepenger
              servicePort: 80
---
# Source: SandBox/charts/dips-ehr-app/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "local-dips-ehr-app-test-connection"
  labels:
    helm.sh/chart: dips-ehr-app-0.1.0
    app.kubernetes.io/name: dips-ehr-app
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['local-dips-ehr-app:80']
  restartPolicy: Never
---
# Source: SandBox/charts/dips-ehr-configuration/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "local-dips-ehr-configuration-test-connection"
  labels:
    helm.sh/chart: dips-ehr-configuration-0.1.0
    app.kubernetes.io/name: dips-ehr-configuration
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['local-dips-ehr-configuration:80']
  restartPolicy: Never
---
# Source: SandBox/charts/dips-ehr-images/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "local-dips-ehr-images-test-connection"
  labels:
    helm.sh/chart: dips-ehr-images-0.1.0
    app.kubernetes.io/name: dips-ehr-images
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['local-dips-ehr-images:80']
  restartPolicy: Never
---
# Source: SandBox/charts/dips-ehr-notes/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "local-dips-ehr-notes-test-connection"
  labels:
    helm.sh/chart: dips-ehr-notes-0.1.0
    app.kubernetes.io/name: dips-ehr-notes
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['local-dips-ehr-notes:80']
  restartPolicy: Never
---
# Source: SandBox/charts/dips-ehr-security/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "local-dips-ehr-security-test-connection"
  labels:
    helm.sh/chart: dips-ehr-security-0.1.0
    app.kubernetes.io/name: dips-ehr-security
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['local-dips-ehr-security:80']
  restartPolicy: Never
---
# Source: SandBox/charts/dips-fhir-service2/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "local-dips-fhir-service2-test-connection"
  labels:
    helm.sh/chart: dips-fhir-service2-0.1.0
    app.kubernetes.io/name: dips-fhir-service2
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['local-dips-fhir-service2:80']
  restartPolicy: Never
---
# Source: SandBox/charts/nav-pleiepenger/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "local-nav-pleiepenger-test-connection"
  labels:
    helm.sh/chart: nav-pleiepenger-0.1.0
    app.kubernetes.io/name: nav-pleiepenger
    app.kubernetes.io/instance: local
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['local-nav-pleiepenger:80']
  restartPolicy: Never
